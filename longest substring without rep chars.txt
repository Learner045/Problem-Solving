class Solution {
    public int lengthOfLongestSubstring(String s) {
        //pwwkew
        //abcabcbb
        //"abcddfghiabd"
        
        if(s.length()==0)return 0;
        if(s.length()==1)return 1;
        HashMap<Character,Integer>hm=new HashMap<>();
        int len=s.length();
        int max=0;
        int start=0;
        for(int i=0;i<len;i++){
            
            //also check whether the key we are looking at is after the start pointer.because we only consider out substring from start
            //as we have already discarded prevs subst which is behind start
            if(hm.containsKey(s.charAt(i)) && hm.get(s.charAt(i))>=start){
                start=hm.get(s.charAt(i))+1;
            }
            hm.put(s.charAt(i),i);
            
            max=Math.max(max,i-start+1);//length of subs is end-start+1 because we need inclusive ..so add 1 before u r done
            
        }
        return max;
    }
}